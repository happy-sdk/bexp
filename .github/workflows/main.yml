name: main

concurrency:
  group: main-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Lint all packages
        uses: ./.github/actions/golangci-lint-monorepo-action
        with:
          golangci-lint-version: latest

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - devel/testutils
          - scheduling/cron
          - settings
          - strings/bexp
          - vars
          - vars/varflag
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.21.5'
      - uses: actions/checkout@v4
      - name: generate coverage
        working-directory: ./${{ matrix.package }}
        run: go test -race -coverpkg=./... -coverprofile=coverage.out ./...
      - name: upload coverage
        uses: coverallsapp/github-action@v2
        with:
          flag-name: ${{ matrix.package }}
          parallel: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ matrix.package }}/coverage.out

  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finish
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
