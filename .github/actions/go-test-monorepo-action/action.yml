name: 'Go Test Monorepo'
description: 'Automatically find and test all Go packages in a monorepo'
inputs:
  go-version:
    description: 'Go version'
    default: '1.21.5'
  only-module-list:
    description: 'Only outputs module list without running tests'
    default: 'false'
outputs:
  modules:
    description: "List of Go modules"
    value: ${{ steps.coveredmodules.outputs.modules }}
runs:
  using: 'composite'
  steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Determine OS
      id: determine-os
      run: |
        echo "os=$(echo $RUNNER_OS | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      shell: bash


    - name: Run tests and generate coverage for all modules
      id: coveredmodules
      run: |
        if [[ "${{ steps.determine-os.outputs.os }}" == "linux" ]]; then
          ./.github/actions/go-test-monorepo-action/go-test-monorepo-action.sh ${{ inputs.only-module-list }}
        elif [[ "${{ steps.determine-os.outputs.os }}" == "windows" ]]; then
          pwsh -File ./.github/actions/go-test-monorepo-action/go-test-monorepo-action.ps1 ${{ inputs.only-module-list }}
        elif [[ "${{ steps.determine-os.outputs.os }}" == "darwin" ]]; then
          ./.github/actions/go-test-monorepo-action/go-test-monorepo-action.sh ${{ inputs.only-module-list }}
        else
          echo "Unsupported OS"
          exit 1
        fi
